{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,gCAAgC,+BAA+B,+BAA+B,KAAK,+CAA+C,+S;;;;;;;;;;;ACAlJ,yaAAya,gBAAgB,iLAAiL,uBAAuB,+CAA+C,aAAa,uMAAuM,cAAc,+kB;;;;;;;;;;;;;;;;;;ACA50B;AAGb;AAOzD;IALA;QAME,UAAK,GAAG,QAAQ,CAAC;QAEjB,cAAS,GAAG,qDAAO,CAAC,IAAI,CAAC;QAKzB,eAAU,GAAG,KAAK,CAAC;IAgCrB,CAAC;IAzBC,+BAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,OAA0B;YAC7D,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YAClC,KAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAClC,CAAC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,UAAC,OAA0B;YAChE,OAAO,CAAC,KAAK,CAAC,mFAAmF,CAAC,CAAC;QACrG,CAAC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAC,MAAe;YACxD,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IAED,uCAAgB,GAAhB,UAAiB,YAAoB;QACnC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACtC,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC;IAC1C,CAAC;IAED,2CAAoB,GAApB,UAAqB,aAAqB;QACxC,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,aAAa,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;IAClE,CAAC;IAjCD;QADC,+DAAS,CAAC,SAAS,CAAC;wEACZ,wEAAqB;iDAAC;IANpB,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAwCxB;IAAD,mBAAC;CAAA;AAxCwB;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AAEe;AACT;AAES;AAexD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAkB;aACnB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACrBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".small-video {\\r\\n    -o-object-fit: contain;\\r\\n       object-fit: contain;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBbUI7T0FBbkIsbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc21hbGwtdmlkZW8ge1xyXG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcclxufSJdfQ== */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div *ngIf=\\\"availableDevices\\\">\\n  <select (change)=\\\"onDeviceSelectChange($event.target.value)\\\">\\n    <option value=\\\"\\\" [selected]=\\\"!selectedDevice\\\">No Device</option>\\n    <option *ngFor=\\\"let device of availableDevices\\\" [value]=\\\"device.deviceId\\\" [selected]=\\\"selectedDevice && device.deviceId === selectedDevice.deviceId\\\">{{ device.label }}</option>\\n  </select>\\n</div>\\n\\n\\n<div [hidden]=\\\"!hasCameras\\\">\\n    <h2 *ngIf=\\\"!this.selectedDevice\\\">No camera selected.</h2>\\n    <p>\\n        Result:\\n        <strong>{{ barcodeResultString }}</strong>\\n    </p>\\n    <p>Angular version: {{ ngVersion }}</p>\\n\\n    <zxing-scanner #scanner class=\\\"test-class\\\" start=\\\"true\\\" [device]=\\\"selectedDevice\\\" \\n    (scanSuccess)=\\\"handleCodeResult($event)\\\"\\n    cssClass=\\\"small-video\\\" style=\\\"width: 50vw; height: 50vh;\\\"></zxing-scanner>\\n\\n</div>\\n\\n<div *ngIf=\\\"!hasCameras && hasPermission === true\\\">\\n\\n    <h1>Looks like your actual device does not have cameras, or I could no find'em. </h1>\\n\\n</div>\\n\\n<div *ngIf=\\\"hasPermission === undefined\\\">\\n\\n    <h1>Waiting for permissions.</h1>\\n\\n    <blockquote>\\n        <h2>If your device does not has cameras, no permissions will be asked.</h2>\\n    </blockquote>\\n\\n</div>\\n\\n<div *ngIf=\\\"hasPermission === false\\\">\\n\\n    <h1>You denied the camera permissions, we can't scan anything without it. ðŸ˜ª</h1>\\n\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, ViewChild, OnInit, VERSION } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\n\nimport {ZXingScannerComponent} from '@zxing/ngx-scanner';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'excart';\n\n  ngVersion = VERSION.full;\n\n  @ViewChild('scanner')\n  scanner: ZXingScannerComponent;\n\n  hasCameras = false;\n  hasPermission: boolean;\n  barcodeResultString: string;\n\n  availableDevices: MediaDeviceInfo[];\n  selectedDevice: MediaDeviceInfo;\n\n  ngOnInit(){\n    this.scanner.camerasFound.subscribe((devices: MediaDeviceInfo[]) => {\n      this.hasCameras = true;\n      console.log('Devices: ', devices);\n      this.availableDevices = devices;\n    })\n\n    this.scanner.camerasNotFound.subscribe((devices: MediaDeviceInfo[])=> {\n      console.error(\"An error has occurred when trying to enumerate your video-stream-enabled devices.\");\n    })\n\n    this.scanner.permissionResponse.subscribe((answer: boolean)=>{\n      this.hasPermission = answer;\n    })\n  }\n\n  handleCodeResult(resultString: string){\n    console.log(\"Result: \", resultString);\n    this.barcodeResultString = resultString;\n  }\n\n  onDeviceSelectChange(selectedValue: string){\n    console.log('Selection changed: ', selectedValue);\n    this.selectedDevice = this.scanner.getDeviceById(selectedValue);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ZXingScannerModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}